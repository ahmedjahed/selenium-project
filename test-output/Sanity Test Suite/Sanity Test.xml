<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Auntors-MacBook-Air.local" ignored="51" name="Sanity Test" tests="1" failures="1" timestamp="2023-03-17T23:22:04 BDT" time="0.336" errors="0">
  <testcase name="addNewAccountUsingValidData" time="0.057" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.guru99BankingDemo.testCases.BaseClass.loginToTheApplication(BaseClass.java:145)
at com.guru99BankingDemo.testCases.AccountModuleTest.addNewAccountUsingValidData(AccountModuleTest.java:63)
at java.util.ArrayList.forEach(ArrayList.java:1259)
... Removed 27 stack frames]]>
    </failure>
  </testcase> <!-- addNewAccountUsingValidData -->
  <testcase name="editCustomerUsingInvalidId" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- editCustomerUsingInvalidId -->
  <testcase name="deleteCustomerUsingValidId" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- deleteCustomerUsingValidId -->
  <testcase name="addNewAccountUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- addNewAccountUsingInvalidData -->
  <testcase name="resetChangePasswordForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetChangePasswordForm -->
  <testcase name="fundTransferUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- fundTransferUsingInvalidData -->
  <testcase name="changePasswordUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- changePasswordUsingInvalidData -->
  <testcase name="withdrawalUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- withdrawalUsingInvalidData -->
  <testcase name="checkSavingsSelected" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- checkSavingsSelected -->
  <testcase name="managerAccountLogout" time="0.0" classname="com.guru99BankingDemo.testCases.ManagerModuleTest">
    <ignored/>
  </testcase> <!-- managerAccountLogout -->
  <testcase name="resetBalanceEnquiryForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetBalanceEnquiryForm -->
  <testcase name="resetCustomisedStatementForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetCustomisedStatementForm -->
  <testcase name="addCustomerUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- addCustomerUsingValidData -->
  <testcase name="depositUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- depositUsingInvalidData -->
  <testcase name="addCustomerUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- addCustomerUsingInvalidData -->
  <testcase name="fundTransferUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- fundTransferUsingValidData -->
  <testcase name="loginUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.ManagerModuleTest">
    <ignored/>
  </testcase> <!-- loginUsingInvalidData -->
  <testcase name="resetFundTransferForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetFundTransferForm -->
  <testcase name="registerUsingInvalidEmail" time="0.0" classname="com.guru99BankingDemo.testCases.ManagerModuleTest">
    <ignored/>
  </testcase> <!-- registerUsingInvalidEmail -->
  <testcase name="nameGenderBirthDateEditable" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- nameGenderBirthDateEditable -->
  <testcase name="deleteAccountUsingValidAccountNo" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- deleteAccountUsingValidAccountNo -->
  <testcase name="resetAccountEntryForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetAccountEntryForm -->
  <testcase name="depositUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- depositUsingValidData -->
  <testcase name="customisedStatementUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- customisedStatementUsingValidData -->
  <testcase name="loginUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.ManagerModuleTest">
    <ignored/>
  </testcase> <!-- loginUsingValidData -->
  <testcase name="editAccountUsingInvalidAccountNo" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- editAccountUsingInvalidAccountNo -->
  <testcase name="resetWithdrawalForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetWithdrawalForm -->
  <testcase name="deleteCustomerUsingInvalidId" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- deleteCustomerUsingInvalidId -->
  <testcase name="editAccountEntryForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- editAccountEntryForm -->
  <testcase name="resetEditCustomerIdForm" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- resetEditCustomerIdForm -->
  <testcase name="resetCustomerForm" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- resetCustomerForm -->
  <testcase name="resetDeleteCustomerForm" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- resetDeleteCustomerForm -->
  <testcase name="deleteAccountUsingInvalidAccountNo" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- deleteAccountUsingInvalidAccountNo -->
  <testcase name="resetAccountUsingValidAccountNo" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetAccountUsingValidAccountNo -->
  <testcase name="balanceEquiryUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- balanceEquiryUsingInvalidData -->
  <testcase name="miniStatementUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- miniStatementUsingInvalidData -->
  <testcase name="balanceEquiryUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- balanceEquiryUsingValidData -->
  <testcase name="resetCustomerDataForm" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- resetCustomerDataForm -->
  <testcase name="miniStatementUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- miniStatementUsingValidData -->
  <testcase name="resetDeleteAccountForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetDeleteAccountForm -->
  <testcase name="changePasswordUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- changePasswordUsingValidData -->
  <testcase name="resetDepositForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetDepositForm -->
  <testcase name="editCustomerUsingValidId" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- editCustomerUsingValidId -->
  <testcase name="verifyCustomerIdBalanceEnabled" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- verifyCustomerIdBalanceEnabled -->
  <testcase name="resetMiniStatementForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetMiniStatementForm -->
  <testcase name="editCustomerUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- editCustomerUsingValidData -->
  <testcase name="editAccountUsingValidAccountNo" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- editAccountUsingValidAccountNo -->
  <testcase name="editCustomerUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.CustomerModuleTest">
    <ignored/>
  </testcase> <!-- editCustomerUsingInvalidData -->
  <testcase name="customisedStatementUsingInvalidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- customisedStatementUsingInvalidData -->
  <testcase name="resetAddNewAccountForm" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- resetAddNewAccountForm -->
  <testcase name="registerUsingValidEmail" time="0.0" classname="com.guru99BankingDemo.testCases.ManagerModuleTest">
    <ignored/>
  </testcase> <!-- registerUsingValidEmail -->
  <testcase name="withdrawalUsingValidData" time="0.0" classname="com.guru99BankingDemo.testCases.AccountModuleTest">
    <ignored/>
  </testcase> <!-- withdrawalUsingValidData -->
</testsuite> <!-- Sanity Test -->
